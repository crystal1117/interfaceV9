<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="5" ignored="4" total="20" passed="11">
  <reporter-output>
  </reporter-output>
  <suite name="xxx项目" duration-ms="7416" started-at="2020-04-16T12:49:16Z" finished-at="2020-04-16T12:49:24Z">
    <groups>
    </groups>
    <test name="用户模块" duration-ms="7416" started-at="2020-04-16T12:49:16Z" finished-at="2020-04-16T12:49:24Z">
      <class name="com.lemon.cases.LoginCase">
        <test-method status="FAIL" signature="test(com.lemon.pojo.API, com.lemon.pojo.Case)[pri:0, instance:com.lemon.cases.LoginCase@4fe89c24]" name="test" duration-ms="433" started-at="2020-04-16T20:49:21Z" data-provider="datas" finished-at="2020-04-16T20:49:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=2, name=login, method=post, url=http://api.lemonban.com/futureloan/member/login, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=7, desc=传手机号，不传密码, params={"mobile_phone":"18900000000","pwd":""}, apiId=2, expect="code":2@@"msg":"手机号码为空", sql=null]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [断言成功] but found [期望值："msg":"手机号码为空"不在响应体内。]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [断言成功] but found [期望值："msg":"手机号码为空"不在响应体内。]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at com.lemon.cases.LoginCase.test(LoginCase.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(com.lemon.pojo.API, com.lemon.pojo.Case)[pri:0, instance:com.lemon.cases.LoginCase@4fe89c24]" name="test" duration-ms="99" started-at="2020-04-16T20:49:22Z" data-provider="datas" finished-at="2020-04-16T20:49:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=2, name=login, method=post, url=http://api.lemonban.com/futureloan/member/login, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=8, desc=不传手机号，传密码, params={"mobile_phone":"","pwd":"12345678"}, apiId=2, expect="code":2@@"msg":"手机号码为空"@@"data":null, sql=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="FAIL" signature="test(com.lemon.pojo.API, com.lemon.pojo.Case)[pri:0, instance:com.lemon.cases.LoginCase@4fe89c24]" name="test" duration-ms="265" started-at="2020-04-16T20:49:22Z" data-provider="datas" finished-at="2020-04-16T20:49:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=2, name=login, method=post, url=http://api.lemonban.com/futureloan/member/login, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=9, desc=未注册过的手机号, params={"mobile_phone":"18901110001","pwd":"12345678"}, apiId=2, expect="code":0@@"msg":"OK", sql=null]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [断言成功] but found [期望值："code":0不在响应体内。]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [断言成功] but found [期望值："code":0不在响应体内。]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at com.lemon.cases.LoginCase.test(LoginCase.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="FAIL" signature="test(com.lemon.pojo.API, com.lemon.pojo.Case)[pri:0, instance:com.lemon.cases.LoginCase@4fe89c24]" name="test" duration-ms="282" started-at="2020-04-16T20:49:22Z" data-provider="datas" finished-at="2020-04-16T20:49:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=2, name=login, method=post, url=http://api.lemonban.com/futureloan/member/login, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=10, desc=不满足条件的密码, params={"mobile_phone":"18900000000","pwd":"12345"}, apiId=2, expect="code":0@@"msg":"OK", sql=null]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [断言成功] but found [期望值："code":0不在响应体内。]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [断言成功] but found [期望值："code":0不在响应体内。]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at com.lemon.cases.LoginCase.test(LoginCase.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(com.lemon.pojo.API, com.lemon.pojo.Case)[pri:0, instance:com.lemon.cases.LoginCase@4fe89c24]" name="test" duration-ms="293" started-at="2020-04-16T20:49:22Z" data-provider="datas" finished-at="2020-04-16T20:49:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=2, name=login, method=post, url=http://api.lemonban.com/futureloan/member/login, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=11, desc=已注册的账号, params={"mobile_phone":"13222222112","pwd":"12345678"}, apiId=2, expect="code":0@@"msg":"OK", sql=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- com.lemon.cases.LoginCase -->
      <class name="com.lemon.cases.RechargeCase">
        <test-method status="PASS" signature="test(com.lemon.pojo.API, com.lemon.pojo.Case)[pri:0, instance:com.lemon.cases.RechargeCase@55795845]" name="test" duration-ms="89" started-at="2020-04-16T20:49:23Z" description="注册测试111111" data-provider="datas" finished-at="2020-04-16T20:49:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=3, name=recharge, method=post, url=http://api.lemonban.com/futureloan/member/recharge, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=12, desc=非当前账号id, params={"member_id":"-1","amount":"6300"}, apiId=3, expect={"code":1007,"msg":"无权限访问，请检查参数","data":null,"copyright":"Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved"}, sql=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(com.lemon.pojo.API, com.lemon.pojo.Case)[pri:0, instance:com.lemon.cases.RechargeCase@55795845]" name="test" duration-ms="123" started-at="2020-04-16T20:49:23Z" description="注册测试111111" data-provider="datas" finished-at="2020-04-16T20:49:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=3, name=recharge, method=post, url=http://api.lemonban.com/futureloan/member/recharge, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=13, desc=超过50万, params={"member_id":"8033888","amount":"1116300"}, apiId=3, expect={"code":2,"msg":"余额必须大于0并且小于或者等于500000","data":null,"copyright":"Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved"}, sql=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(com.lemon.pojo.API, com.lemon.pojo.Case)[pri:0, instance:com.lemon.cases.RechargeCase@55795845]" name="test" duration-ms="108" started-at="2020-04-16T20:49:23Z" description="注册测试111111" data-provider="datas" finished-at="2020-04-16T20:49:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=3, name=recharge, method=post, url=http://api.lemonban.com/futureloan/member/recharge, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=14, desc=负数, params={"member_id":"8033888","amount":"-6300"}, apiId=3, expect={"code":2,"msg":"余额必须大于0并且小于或者等于500000","data":null,"copyright":"Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved"}, sql=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(com.lemon.pojo.API, com.lemon.pojo.Case)[pri:0, instance:com.lemon.cases.RechargeCase@55795845]" name="test" duration-ms="101" started-at="2020-04-16T20:49:23Z" description="注册测试111111" data-provider="datas" finished-at="2020-04-16T20:49:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=3, name=recharge, method=post, url=http://api.lemonban.com/futureloan/member/recharge, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=15, desc=非数字, params={"member_id":"8033888","amount":"SSS"}, apiId=3, expect={"code":2,"msg":"数字格式化异常","data":null,"copyright":"Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved"}, sql=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="FAIL" signature="test(com.lemon.pojo.API, com.lemon.pojo.Case)[pri:0, instance:com.lemon.cases.RechargeCase@55795845]" name="test" duration-ms="620" started-at="2020-04-16T20:49:23Z" description="注册测试111111" data-provider="datas" finished-at="2020-04-16T20:49:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=3, name=recharge, method=post, url=http://api.lemonban.com/futureloan/member/recharge, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=16, desc=正确用例, params={"member_id":"8033888","amount":"6300.99"}, apiId=3, expect={"code":0,"msg":"OK","data":{"id":631,"leave_amount":56750.0,"mobile_phone":"18900000000","reg_name":"hehe","reg_time":"2019-10-20 21:46:06.0","type":1},"copyright":"Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved"}, sql=select leave_amount from member a where a.id = '8033888';]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [断言成功] but found [期望值：{"code":0,"msg":"OK","data":{"id":631,"leave_amount":56750.0,"mobile_phone":"18900000000","reg_name":"hehe","reg_time":"2019-10-20 21:46:06.0","type":1},"copyright":"Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved"}不在响应体内。]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [断言成功] but found [期望值：{"code":0,"msg":"OK","data":{"id":631,"leave_amount":56750.0,"mobile_phone":"18900000000","reg_name":"hehe","reg_time":"2019-10-20 21:46:06.0","type":1},"copyright":"Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved"}不在响应体内。]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at com.lemon.cases.RechargeCase.test(RechargeCase.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- com.lemon.cases.RechargeCase -->
      <class name="com.lemon.cases.RegisterCase">
        <test-method status="PASS" signature="init()[pri:0, instance:com.lemon.cases.RegisterCase@5dbe30be]" name="init" is-config="true" duration-ms="2225" started-at="2020-04-16T20:49:14Z" finished-at="2020-04-16T20:49:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="test(com.lemon.pojo.API, com.lemon.pojo.Case)[pri:0, instance:com.lemon.cases.RegisterCase@5dbe30be]" name="test" duration-ms="2574" started-at="2020-04-16T20:49:16Z" description="注册测试111111" data-provider="datas" finished-at="2020-04-16T20:49:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=1, name=register, method=post, url=http://api.lemonban.com/futureloan/member/register, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=1, desc=传手机号,不传密码, params={"mobile_phone":"19000000000","pwd":""}, apiId=1, expect={"code":1,"msg":"密码为空","data":null,"copyright":"Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved"}, sql=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(com.lemon.pojo.API, com.lemon.pojo.Case)[pri:0, instance:com.lemon.cases.RegisterCase@5dbe30be]" name="test" duration-ms="117" started-at="2020-04-16T20:49:19Z" description="注册测试111111" data-provider="datas" finished-at="2020-04-16T20:49:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=1, name=register, method=post, url=http://api.lemonban.com/futureloan/member/register, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=2, desc=不传手机号，传密码, params={"mobile_phone":"","pwd":"123456"}, apiId=1, expect={"code":1,"msg":"手机号为空","data":null,"copyright":"Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved"}, sql=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(com.lemon.pojo.API, com.lemon.pojo.Case)[pri:0, instance:com.lemon.cases.RegisterCase@5dbe30be]" name="test" duration-ms="132" started-at="2020-04-16T20:49:19Z" description="注册测试111111" data-provider="datas" finished-at="2020-04-16T20:49:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=1, name=register, method=post, url=http://api.lemonban.com/futureloan/member/register, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=3, desc=不合格的手机号, params={"mobile_phone":"123","pwd":"12345678"}, apiId=1, expect={"code":2,"msg":"无效的手机格式","data":null,"copyright":"Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved"}, sql=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(com.lemon.pojo.API, com.lemon.pojo.Case)[pri:0, instance:com.lemon.cases.RegisterCase@5dbe30be]" name="test" duration-ms="105" started-at="2020-04-16T20:49:19Z" description="注册测试111111" data-provider="datas" finished-at="2020-04-16T20:49:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=1, name=register, method=post, url=http://api.lemonban.com/futureloan/member/register, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=4, desc=合格的手机号+不合格密码, params={"mobile_phone":"19000000000","pwd":"12345"}, apiId=1, expect={"code":2,"msg":"密码格式为8到16位","data":null,"copyright":"Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved"}, sql=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="FAIL" signature="test(com.lemon.pojo.API, com.lemon.pojo.Case)[pri:0, instance:com.lemon.cases.RegisterCase@5dbe30be]" name="test" duration-ms="1489" started-at="2020-04-16T20:49:20Z" description="注册测试111111" data-provider="datas" finished-at="2020-04-16T20:49:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=1, name=register, method=post, url=http://api.lemonban.com/futureloan/member/register, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=5, desc=合格手机号+合格密码, params={"mobile_phone":"13222222112","pwd":"12345678"}, apiId=1, expect={"code":2,"msg":"账号已存在","data":null,"copyright":"Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved"}, sql=select count(*) from member where mobile_phone = '13222222112']]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:304)
	at org.testng.Assert.assertEquals(Assert.java:314)
	at com.lemon.cases.RegisterCase.test(RegisterCase.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(com.lemon.pojo.API, com.lemon.pojo.Case)[pri:0, instance:com.lemon.cases.RegisterCase@5dbe30be]" name="test" duration-ms="148" started-at="2020-04-16T20:49:21Z" description="注册测试111111" data-provider="datas" finished-at="2020-04-16T20:49:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=1, name=register, method=post, url=http://api.lemonban.com/futureloan/member/register, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=6, desc=重复以上的手机号+密码, params={"mobile_phone":"13222222112","pwd":"12345678"}, apiId=1, expect={"code":2,"msg":"账号已存在","data":null,"copyright":"Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved"}, sql=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="finish()[pri:0, instance:com.lemon.cases.RegisterCase@5dbe30be]" name="finish" is-config="true" duration-ms="762" started-at="2020-04-16T20:49:24Z" finished-at="2020-04-16T20:49:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
      </class> <!-- com.lemon.cases.RegisterCase -->
    </test> <!-- 用户模块 -->
  </suite> <!-- xxx项目 -->
</testng-results>
